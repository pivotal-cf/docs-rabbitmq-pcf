---
title: Installing and Configuring the <br>On-Demand Service
owner: London Services
---

This topic provides instructions to Pivotal Cloud Foundry (PCF) operators about
how to install, configure, and deploy the RabbitMQ for PCF tile to provide on-demand service.

The RabbitMQ open source product provides additional documentation.
For more information about getting started with RabbitMQ and ensuring production readiness,
see the Production Checklist in the [RabbitMQ Documentation](https://www.rabbitmq.com/production-checklist.html).

<div class="note"><strong>Notes:</strong> <br><br><ul><li>For how to install and
  configure the RabbitMQ for PCF pre-provisioned service,
  see <a href="./install-config-pp.html">Installing and Configuring the Pre-Provisioned Service.</a></li>
  <li>For how to turn off the pre-provisioned service,
    see <a href="./turn-pre-provisioned-off.html">Turning Off the Pre-Provisioned Service</a>.</li></ul>
  </div>

## <a id="rbac"></a>Role-Based Access in Ops Manager

Ops Manager administrators can use Role-Based Access Control (RBAC) to manage which
operators can make deployment changes, view credentials, and manage user roles in Ops Manager.
Therefore, your role permissions might not allow you to perform every procedure in this operator guide.

For more information about roles in Ops Manager, see
    <a href="https://docs.pivotal.io/pivotalcf/opsguide/config-rbac.html#about">
        Understand Roles in Ops Manager</a>.</p>


## <a id="prerequisites"></a> Prerequisites for Deploying the On-Demand Service

Before deploying RabbitMQ for PCF as an on-demand service, ensure the following:

*  <strong>Networking:</strong> You must ensure that the required network rules are in place to allow various components to communicate.
See [Required Networking Rules for On-Demand Services](about.html#network-rules)
for details on the network connections that must be open to enable the on-demand service.

* <strong>Transport Layer Security (TLS):</strong> If you want to use TLS to secure communication between apps and RabbitMQ service instances,
you must complete the procedures in [Provide or Generate a CA Certificate](./prepare-tls.html#provide-generate-pcf) before installing and configuring the tile.

## <a id="install"></a> Download and Install RabbitMQ for PCF

<p class="note"><strong>Note:</strong>
  Before using RabbitMQ for PCF v1.14 and later, you must update any BOSH add-ons
  to support Xenial stemcells.
  See <a href="./upgrade.html#update-addons">Update Add-ons to Run with Xenial Stemcell</a>.</p>

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/pivotal-rabbitmq-service/).

2. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

3. Under the **Import a Product** button, click **+** next to the version number of RabbitMQ for PCF. This adds the tile to your staging area.

4. Click the newly added **RabbitMQ for PCF** tile.
This lets you begin configuring the tile. The installation is complete when you apply the changes from the configuration.

## <a id="tile_configurations"></a> Configure On-Demand RabbitMQ for PCF

The configuration screen below appears when you click the RabbitMQ for PCF tile in Ops Manager.
An orange circle beside a tab indicates that you must complete a configuration in the tab.
A green checkmark indicates that the tab is preconfigured and you may optionally change its settings.
An orange circle indicates that you are required to configure fields on the tab before you can deploy the tile.

![Rabbit Tile Configuration](images/rmq_tile_config.png)


### <a id="azs-networks"></a>  Configure AZs and Networks

 Follow the steps below to configure the AZs and networks.

 1. Click **Assign AZs and Networks**.
     <p class="note warning"><strong>Important</strong>: You cannot change the regions or networks after you have clicked **Apply Changes** in the [Apply Changes from Your Configuration](#apply-changes) below.</p>

 2. Configure the fields on the **Assign AZs and Networks** as follows:
   <table>
     <tr><th>Field</th><th>Instructions</th></tr>
     <tr><td><strong>Place singleton jobs in</strong></td>
         <td>Select the region that you want for singleton VMs. PCF creates the RabbitMQ broker in this AZ.</td></tr>
     <tr><td><strong>Balance other jobs in</strong></td>
         <td>Select additional region. This selection does not affect the on-demand RabbitMQ for PCF service.</td></tr>
     <tr><td><strong>Network</strong></td>
         <td>Select a network for the RabbitMQ On-Demand Broker.<br><br>
             This should be a separate network from the one you select for <strong>Service Network</strong>.
             For more information about the Default Network, see <a href="./about.html#on-demand">Default Network and Service Network</a>.<br><br>
             Typically, you select the network used for the Pivotal Application Service (PAS) or Elastic Runtime components.
         </td></tr>
     <tr><td><strong>Service Network</strong></td>
         <td> Select a separate network that the on-demand service instances run on.<br><br>
              A typical practice is to put all on-demand services on a single network, separate from the network that Pivotal Application Service (PAS) or Elastic Runtime and the On-Demand Broker run on.
              For information about the Service Network, see <a href="./about.html#on-demand">Default Network and Service Network</a>.<br><br>
              This field is also required for the pre-provisioned service, though in that case, it doesn't matter which network you select.</td></tr>
   </table>

    <p class="note warning"><strong>WARNING</strong>: Changing the Network or Service Network after you have configured them, or changing their IP configurations,
       results in a failed deployment.
       For more information, see <a href="./changing-ips.html">Changing Network or IP Addresses Results in a Failed Deployment</a>.</p>

 3. Click **Save**.


### <a id='logging'></a>Configure Logging and Monitoring

Pivotal recommends that you configure logging to monitor the health of RabbitMQ for PCF.
Follow the instructions in [Set Up Syslog Forwarding and Metrics Polling Interval](./monitor.html#config).


### <a id="global"></a>Configure Global Settings

Follow the steps below to configure global settings.

1. Click the **Global Settings for On-Demand Plans** tab.
  ![Global Settings Tab](images/global-settings.png)
1. Configure the following:
<br><br>
  * **Service instance quota**  min: 0, max: 200  set the total number of on-demand service instances which can be deployed.
For more information, see [Setting Limits for On-Demand Service Instances](./set-quotas.html).
<br><br>
  * **VM options**:
  <br><br>
       **Allow outbound internet access (IaaS-dependent)**. This checkbox must be ticked to allow external log forwarding, sending backup artifacts to external destinations, and communicating with an external BOSH blob store.
         <p class="note"><strong>Note</strong>: Outbound network traffic rules also depend on your IaaS settings. Consult your network or IaaS administrator to ensure that your IaaS allows outbound traffic to the external networks you need.</p>
  * **Shareable Instances**: Click **Yes** to enable the feature for sharing instances.<br>
  Sharing a service instance between spaces, allows apps in different spaces to share databases,
  messaging queues, and many other types of services. For more information,
  see [Sharing Service Instances](https://docs.pivotal.io/pivotalcf/devguide/services/sharing-instances.html).
  <br><br>
  * <a id="credhub"></a>**On Demand - Secure Service Instance Credentials with Runtime CredHub**:
  For on-demand services instances, click **Yes** to secure credentials with CredHub.
  <p class="note"><strong>Note</strong>: For this feature to work you must also enable it in PAS.
    For instructions, see <a href="https://docs.pivotal.io/pivotalcf/2-0/opsguide/secure-si-creds.html#pas-config">Step 1: Configure the PAS Tile</a>.
    After deploying the tile, notify developers that they must unbind and rebind existing service instances
    to secure their credentials with CredHub.
  <br><br>
  * **On Demand Service Broker Static IP**: Enter an IP address to assign to your on-demand service broker node.
  BOSH allocates an IP address if the field is left blank.
  <br><br>
  * **Number of upgrade canary instances**: Set the number of canary instances
  on which to run the "upgrade all service instances" or the "recreate all service instances" errands first.
  If the errand succeeds on all canary instances, it is run on the remaining instances.
  <br><br>
  * **Maximum number of instances upgraded in parallel**: Set the limit for the
  number of instances on which to simultaneously run the "upgrade all service instances" errand or the "recreate all service instances" errand.
  The number of available BOSH workers limits the number of simultaneous runs.
  See <a href="https://bosh.io/jobs/director?source=github.com/cloudfoundry/bosh#p=director.workers">workers</a> in the Cloud Foundry BOSH documentation.
  Set the value lower than this limit to avoid over-saturating BOSH.

1. Click **Save**.

### <a id="security"></a> Configure Security

RabbitMQ for PCF lets you use Transport Layer Security (TLS) to secure communication between apps and RabbitMQ service instances.

To configure the TLS settings, do the following:

1. Ensure that you have performed the procedures in [Provide or Generate a CA Certificate](./prepare-tls.html#provide-generate-pcf)
before configuring the tile and applying changes.

1. Click the **Security for On-Demand Plans** tab.

    ![security](images/security.png)

1. Under **TLS Options**, select either **Optional** or **Enforced**.
**Optional**  enables developers to configure their RabbitMQ service instances to use TLS. **Enfored** requires TLS to be enabled.

<p class='note warning'><strong>Important</strong>: If TLS is set to **Enforced**, then all existing service instances will use TLS once they are upgraded. Any apps not using TLS will no longer be able to communicate with their service instances. Such apps will require a new binding and must be configured to communicate with their RabbitMQ service instance via TLS.</p>

<div class="note"><strong>Note:</strong> A service instance cannot disable TLS once it has been enabled. If `TLS Options` is subsequently set to **Disabled**, existing service instances will continue to use TLS. However, new instances will not be configured with TLS.</div>

1. Click **Save**.

2. Click **Review Pending Changes**.
For more information about this Ops Manager page,
see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).

1. In the Installation Dashboard, make sure the **Upgrade All Service Instances**
errand is set to **On**, and then click **Apply Changes**.

1. After deploying the tile, app developers can configure their service instances to use TLS.
For instructions to developers, see [Configure Transport Layer Security (TLS) for
Your Service Instance](use.html#tls).
[//]: # (and [Modifying Apps for TLS](modify-apps-tls.html).)

### <a id="service-plan"></a> Configure the Service Plan

To enable the on-demand service, you must configure at least one on-demand plan.

* You can configure up to five on-demand plans: **On Demand Instance: Plan 1 -- On Demand Instance: Plan 5**.
* All on-demand plans can be configured to have 1, 3, 5, or 7 RabbitMQ nodes.
* If the on-demand service is not enabled, the on-demand broker is deployed alongside the RabbitMQ installation, but it is not available in the Marketplace.

<p class="note"><strong>Note</strong>: You must fully configure <strong>On Demand Instance: Plan 1</strong> even if you disable access to this plan (see <strong>CF Service Access</strong> in the table below).</p>


1. Choose the on-demand service instance you want to configure:<br><br>**On Demand Instance: Plan 1** (complete required fields even if you disable this plan):

    ![service-plan-1-tab](images/plan-1-configuration.png)

    **On Demand Instance: Plan 2, 3, 4, and 5**:

    ![service-plan-2-tab](images/plan-2-configuration.png)

2. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable This Plan</strong></strong></td>
        <td>(Plans 2 - 5 only) To enable, select **Plan Enable**.</td></tr>
    <tr><td><strong>CF Service Access</strong></strong></td>
    <td>Enable or disable access to this plan, or leave access unchanged.<br><br>
        If you enable Plan 1, the default setting for Plans 2 - 5 is **Enable Service Access**.
        If you change this default setting, the smoke tests fail.
        Therefore, if you enable Plan 1 and want to change this default, before doing so, set the **On-Demand Instance Smoke Tests** errand to **Off**.
        For more information, see [Errands](#errands).<br>
      <br><ul>
        <li>**Enable Service Access**---Gives access to all orgs, and displays the service plan to all developers in the Marketplace.
        </li>
        <li>**Disable Service Access**---Disables access to all orgs, and hides the service plan to all developers in the Marketplace. This setting cannot be selected at a later time in the UI.
        </li>
        <li>**Leave Service Access Unchanged**---Keeps any existing access settings, and only displays the service plan in the Marketplace to members of orgs that have access to the plan. You can change the access settings later using the cf CLI. For instructions, see [Controlling Access to Service Plans by Org](./control-access.html).
        </li>
      </ul></td></tr>
    <tr><td><strong>Plan Name</strong></td>
        <td>Accept the default or enter a name. This is the name that appears in the Marketplace.</td></tr>
    <tr><td><strong>Plan Description</strong></td>
        <td>Accept the default or enter a description.  This description appears in the Marketplace.</td></tr>
    <tr><td><strong>Paid Plan</strong></td>
        <td>Enable this checkbox to indicate that this service plan is paid.
            The plan is marked with an asterisk in the <code>cf marketplace</code> list and
            labeled <code>paid</code> in the <code><strong>free or paid</strong></code> column when individual plans are listed.</td></tr>
    <tr><td><strong>Plan Features</strong></td>
        <td>Accept the default or enter a description.  This description appears in Apps Manager.</td></tr>
    <tr><td><strong>Service Instance Quota</strong></td>
        <td>Enter the maximum number of on-demand service instances that can be available at one time. For more information, see [Setting Limits for On-Demand Service Instances](./set-quotas.html).</td></tr>
    <tr><td><strong>Number of Nodes</strong></strong></td>
        <td>Enter 1, 3, 5 or 7. This setting only affects new service instances.
            Previously deployed service instances are **not** updated.</td></tr>
    <tr><td><strong>Network Partition Behaviour</strong></strong></td>
        <td>Select <code>pause_minority</code> or <code>autoheal</code>. Pivotal recommends using pause minority.
            For more information, see <a href="./ondemand.html#tradeoff">Consistency or Availability Tradeoff</a>.</td></tr>
    <tr><td><strong>RabbitMQ VM Type</strong></td>
        <td>Select a large VM type. The plan creates a service instance of this size. For more information, see <a href="#resources">Understanding RabbitMQ VM Types and Persistent Disk Size</a> below. </td></tr>
    <tr><td><strong>Persistent Disk Type</strong></td>
    <td>This is where RabbitMQ pages messages to disk.
    Service instance deployments fail if this value is less than twice the volume of RAM of the selected RabbitMQ VM Type.
    For more information, see <a href="#resources">Understanding RabbitMQ VM Types and Persistent Disk Size</a> below.</td></tr>
    <tr><td><strong>AZ Placement</strong></td>
    <td>This field is available after you complete the [Assign AZs and Networks](#azs-networks) page.
        <ul><li>For a single-node plan, select one or more AZs.</li>
          <li>For a plan containing multiple nodes, select only one AZ.
        Pivotal recommends this for multi-node plans to minimize risks due to network latency and partitions. See <a href="./ondemand.html#latency">Network Latency</a> and <a href="./ondemand.html#tradeoff">Consistency or Availability Tradeoff</a> for details.
        <br><br>If you change this selection after deployment, existing instances are not affected by the change. See [Determine which AZs a Service Instance Uses](#determineaz).</li>
      </ul></td></tr>
  </table>


3. Click **Save**.

#### <a id="determineaz"></a> Determine which AZs a Service Instance Uses

<p class='note warning'><strong>Important</strong>: If you change this configuration after you have selected AZs and deployed service instances, existing instances are not placed in the newly configured AZs when the Upgrade All Service Instances or Recreate All Service Instances errands are run. This prevents re-creation of the VMs in different AZs, which could lead to data loss.
<br>All new service instances, however, are created in the newly configured AZs.</p>

<br>To determine which AZs a service instance is placed in, do one of the following:

<ul><li>Retrieve the service GUID using the <code>cf service SERVICE_INSTANCE --guid</code> command
       and then run the BOSH <code>instances</code> command for the <code>service-instance_GUID</code> deployment.</li>

  <li>With syslog forwarding enabled, inspect the service broker logs
          when running the <strong>Upgrade All Service Instances</strong> errand. For each existing service instance, the log message includes the service instance GUID and the AZs the service instance is running in.</li>
</ul>


#### <a id="resources"></a> Understanding RabbitMQ VM Types and Persistent Disk Size

The **RabbitMQ VM Type** and **Persistent disk type** are required fields on the service plan configuration pages.
If you are installing on PCF v2.0 or later, these properties are pre-configured by default.

<%= image_tag("images/vm-ram-disk-example.png", :width => "400") %>

Pivotal recommends that the value of **Persistent disk type** be twice the amount of RAM of the selected **RabbitMQ VM Type**.

* You can change the RabbitMQ VM type and the size of the persistent disk that is attached to the RabbitMQ instances.
  For example, if you are running out of disk space you might want to increase the persistent disk size
  by changing the **Persistent disk type** field.
  If you make changes, ensure that the persistent disk size is still twice the size of the RAM of the RabbitMQ VM type.

* RabbitMQ raises alarms when disk space drops below the configured limit.
Incorrect disk sizes might cause the deployed instance not to start.
RabbitMQ declines to start if there is not enough space available according to the threshold.

* On-Demand instances are configured with a threshold set to the 150% of the memory (RAM) of the VM.
Use the following table as a guide when selecting the size of the persistent disk.

The following table shows an example of possible RAM values, absolute minimal value below which
RabbitMQ declines to start, and the disk size suggested for an average use case.

<table border="1" class="nice">
  <tr>
    <th>RAM</th>
    <th>Free disk alarm threshold (1.5xRAM)</td>
    <th>Suggested disk size (2xRAM)</th>
  <tr>
  <tr>
    <td>10 GB</td>
    <td>15 GB</td>
    <td>20 GB</td>
  <tr>
  <tr>
    <td>16 GB</td>
    <td>24 GB</td>
    <td>32 GB</td>
  <tr>
  <tr>
    <td>32 GB</td>
    <td>48 GB</td>
    <td>64 GB</td>
  <tr>
</table>

Minimum resources required for each RabbitMQ VM:

- CPU: 2
- RAM: 1 GB
- Ephemeral disk: 2 GB
- Persistent disk: 4 GB

For more information, see the following:

+ [Memory and Disk Alarms](http://www.rabbitmq.com/alarms.html)
+ [Disk Alarms](http://www.rabbitmq.com/disk-alarms.html)

For information on all preconfigured settings, see [Things that are Preconfigured](./ondemand.html#preconfigured).

### <a id="stemcell"></a> Verify the Stemcell

To verify that you have the correct stemcell, follow the procedure in
[Importing and Managing Stemcells](https://docs.pivotal.io/pivotalcf/opsguide/managing-stemcells.html).


### <a id="apply-changes"></a> Apply Changes from Your Configuration

Your installation is not complete until you apply your configuration changes. Follow the steps below:

1. Return to the Ops Manager Installation Dashboard.

1. Click **Review Pending Changes**.
For more information about this Ops Manager page,
see [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).

1. Click **Apply Changes** to complete the installation of RabbitMQ for PCF.

## <a id='errands'></a>Errands

When deploying or updating RabbitMQ for PCF, Ops Manager can optionally run a
series of [Post-Deploy Errands](#post-deploy-errands).
An example is the `Smoke Tests` errand, which checks the health of the RabbitMQ
cluster after a deploy or upgrade.

You can toggle errands on and off on the **Review Pending Changes** page.

![Configuring One-time Errands](images/errands-installation-pending-changes.png)

<p class='note warning'><strong>Warning:</strong> In RabbitMQ for PCF v1.9.0 and later,
  post-deploy errands are on by default except for the Recreate All Service Instances errand.
  Pivotal recommends keeping these defaults, because the smoke tests can encounter
  unexpected issues, and on-demand instances of RabbitMQ for PCF might fall behind
  if the Upgrade All Service Instances errand is not on by default.</p>

You can change these defaults by clicking **Errands** in the RabbitMQ for PCF
**Settings** tab as well as the defaults for [pre-delete](#pre-delete-errands) errands.

For more information on errand run rules, see [Errand Run Rules](https://docs.pivotal.io/pivotalcf/customizing/managing_errands.html#rules).

RabbitMQ for PCF errands are colocated with their brokers to decrease errand run time and VM footprint.
In earlier releases, a new VM was deployed for each errand.
For more information about errands, see [Errands](http://docs.pivotal.io/tiledev/tile-errands.html).

### <a id='post-deploy-errands'></a>Post-Deploy Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Pre-Provisioned Broker Registrar</strong></td>
    <td>Makes the pre-provisioned RabbitMQ service plans available in the Marketplace</td>
  </tr>
  <tr>
    <td><strong>Pre-Provisioned Smoke Tests</strong></td>
    <td>Checks that a pre-provisioned RabbitMQ service instance can be bound to
      a Cloud Foundry app, and that the app can publish and subscribe to a RabbitMQ cluster.
    See <a href="./smoke-tests.html">Smoke Tests</a>.</td>
  </tr>
  <tr>
    <td><strong>Register On Demand Service Broker</strong></td>
    <td>Makes the on-demand RabbitMQ service plans available in the Marketplace. If you change the Service Plan Configuration, you must run this errand in order for the changes to be reflected in the Marketplace.</td>
  </tr>
  <tr>
    <td><strong>On Demand Instance Smoke Tests</strong></td>
    <td>Checks that on-demand RabbitMQ service instances can be bound to a Cloud Foundry app, and that the app can publish and subscribe to a RabbitMQ cluster.
    Smoke tests only run against Plan 1. See <a href="./smoke-tests.html">Smoke Tests</a>.</td>
  </tr>
  <tr>
    <td><strong>Upgrade All Service Instances</strong></td>
    <td>On-Demand instances are updated and redeployed if there are changes to on-demand plan settings or the
    tile is upgraded. If this errand is set to <strong>Off</strong> or <strong>When Changed</strong>, updates to on-demand plan settings will <strong>not</strong> be applied to existing service instances. <strong>Pivotal strongly recommends that this errand is configured to always run</strong>.</td>
  </tr>
  <tr>
    <td><strong>Recreate All Service Instances</strong></td>
    <td>This errand re-creates all on-demand instance VMs managed by the on-demand broker.
      It is useful for tasks that require re-creating a service instance VM,
      such as rotating the Ops Manager root certificate authority (CA) or fully restoring the platform during disaster recovery or migration.
    <br>
    <strong>This errand is off by default and should be enabled only when you want to recreate a VM.</strong></td>
  </tr>
</table>

### <a id='pre-delete-errands'></a>Pre-Delete Errands

<table class="nice">
  <th>Errand</th>
  <th>Description</th>
  <tr>
    <td><strong>Deregister and Purge Instances</strong></td>
    <td>Removes the pre-provisioned RabbitMQ service from the Marketplace and deletes all associated service instances and bindings. For more information, see <a href="./turn-pre-provisioned-off.html">Turning Off the Pre-Provisioned Service</a>.</td>
  </tr>
  <tr>
    <td><strong>Delete All Service Instances</strong></td>
    <td>Unbinds and deletes existing on-demand service instances. The duration of this errand depends on the number of deployed on-demand instances.</td>
  </tr>
  <tr>
    <td><strong>Deregister On-Demand Service Broker</strong></td>
    <td>Removes the on-demand RabbitMQ service from the Marketplace</td>
  </tr>
</table>

## <a id="admin-service-key"></a>Create an Admin User for a Service Instance

If you want to give app developers admin privileges to the RabbitMQ Management UI, you can create an admin user for a service instance and share the user credentials with app developers.

Both operators and app developers can use this procedure.

To create an admin user on a RabbitMQ instance do the following:

1. Run this command to create a service key:

    <br>`cf create-service-key SERVICE_INSTANCE SERVICE_KEY -c '{"tags": "administrator"}'`

    <br>where:

    <br>`SERVICE_INSTANCE` is the name you supplied when you ran `cf create-service`. <br> `SERVICE_KEY` is a name you choose to identify the service key.

    <br>For example:

    <pre class="terminal">
   $ cf create-service-key my-instance my-admin-key -c '{"tags":"administrator"}'<br>
   Creating service key my-admin-key for service instance my-instance as user<span>@</span>example.com...
   OK
</pre>

1. Run this command to get the admin user credentials:

    <br>`cf service-key SERVICE_INSTANCE SERVICE_KEY` where the variables are the same as above.

    <br>This returns a Dashboard URL containing the admin credentials, which can be used to access the management UI. For example:

    <pre class="terminal">
   $ cf service-key my-instance my-admin-key<br>
   Getting key my-admin-key for service instance my-instance as user<span>@</span>example.com...
   {
     "dashboard_url": "https://my-instance.bosh-lite.com/#/login/admin-username/admin-password",
     "username": "admin-username",
     "password": "admin-password",
     ...
   }
</pre>

## <a id="server-plugins"></a> RabbitMQ Server Plugins

RabbitMQ for PCF supports a subset of available RabbitMQ plugins.
See the sections below for which plugins are supported, and whether they are
enabled or disabled by default.

### <a id="enabled-plugins"></a> Enabled RabbitMQ Server Plugins

The following plugins are enabled by default, you cannot disable them:

* `rabbitmq_management`---For more information, see
[Management Plugin](https://www.rabbitmq.com/management.html) in the RabbitMQ documentation.

* `rabbitmq_federation`---For more information, see [Federate Exchanges and Queues](./use.html#federation).

* `rabbitmq_federation_management`

* `rabbitmq_shovel`---For more information, see [Shovel Exchanges and Queues](./use.html#shovel).

* `rabbitmq_shovel_management`

* `rabbitmq_sharding`---For more information, see the
[rabbitmq sharding](https://github.com/rabbitmq/rabbitmq-sharding/blob/master/README.md) GitHub repository.

* `rabbitmq_consistent_hash_exchange`---For more information, see the
[rabbitmq consistent hash exchange](https://github.com/rabbitmq/rabbitmq-consistent-hash-exchange/blob/master/README.md) GitHub repository.


### <a id="disabled-plugins"></a> Disabled RabbitMQ Server Plugins

The following plugins are disabled by default:

* `rabbitmq_event_exchange`---For more information, see [Event Exchange Plugin](https://www.rabbitmq.com/event-exchange.html).
* `rabbitmq_mqtt`---For more information, see [MQTT Plugin](https://www.rabbitmq.com/mqtt.html).

You can enable these plugins when you create a service instance or by updating an existing
service instance.

To enable the plugin, run the one of the following commands, specifying the plugin
as a configuration parameter in JSON:

* When creating a service instance, run:

    ```
    cf create-service SERVICE PLAN SERVICE-INSTANCE -c PARAMETER-AS-JSON
    ```
    For example:

    <pre class="terminal">
    $ cf create-service p.rabbitmq single-node myservice -c '{ "plugins": { "rabbitmq_event_exchange": true } }'
    </pre>

* When updating an existing service instance, run:

    ```
    cf update-service SERVICE-INSTANCE -c PARAMETER-AS-JSON
    ```
    For example:

    <pre class="terminal">
    $ cf update-service myservice -c '{ "plugins": { "rabbitmq_event_exchange": true } }'
    </pre>

* When enabling more than one plugin, specify all the plugin names in the same command. For example:

    <pre class="terminal">
    $ cf create-service p.rabbitmq single-node myservice -c '{ "plugins": { "rabbitmq_event_exchange": true, "rabbitmq_mqtt": true } }'
    </pre>

    Or:

    <pre class="terminal">
    $ cf update-service myservice -c '{ "plugins": { "rabbitmq_event_exchange": true, "rabbitmq_mqtt": true } }'
    </pre>
